angular.module("snap", []),
    function() {
        "use strict";
        var e = [1, 4, 1],
            t = {
                full: e.join("."),
                major: e[0],
                minor: e[1],
                patch: e[2]
            };
        angular.module("snap").constant("SNAP_VERSION", t)
    }(), angular.module("snap").directive("snapClose", ["$rootScope", "snapRemote",
        function(e, t) {
            "use strict";
            return {
                restrict: "A",
                link: function(n, r, i) {
                    r.bind("click", function() {
                        t.close(n.$eval(i.snapId)), e.$digest()
                    })
                }
            }
        }
    ]), angular.module("snap").directive("snapContent", ["snapRemote",
        function(e) {
            "use strict";
            return {
                restrict: "AE",
                link: function(t, n, r) {
                    
                    n.addClass("snap-content");
                    var i = {
                        element: n[0]
                    };
                    angular.extend(i, e.globalOptions);
                    var s = r.snapId;
                    s && (s = t.$eval(r.snapId)),
                            angular.isDefined(r.snapOptions) && r.snapOptions && angular.extend(i, t.$eval(r.snapOptions)),
                            e.register(new window.Snap(i), s), 
                            angular.isDefined(r.snapOptions) && r.snapOptions && t.$watch(r.snapOptions, function(t) {
                                e.getSnapper(s).then(function(e) {
                                    e.settings(t)
                                })
                            }, !0),
                        t.$on("$destroy", function() {
                            e.unregister(s)
                        })
                }
            }
        }
    ]), angular.module("snap").directive("snapDragger", ["snapRemote",
        function(e) {
            "use strict";
            return {
                restrict: "AE",
                link: function(t, n, r) {
                    var i = t.$eval(r.snapId);
                    e.getSnapper(i).then(function(e) {
                        e.settings({
                            dragger: n[0]
                        })
                    })
                }
            }
        }
    ]), angular.module("snap").directive("snapDrawer", function() {
        "use strict";
        return {
            restrict: "AE",
            link: function(e, t, n) {
                t.addClass("snap-drawer");
                var r = t.parent(),
                    i = !0;
                for ("right" === n.snapDrawer ? t.addClass("snap-drawer-right") : t.addClass("snap-drawer-left"); r.length;) r.hasClass("snap-drawers") && (i = !1), r = r.parent();
                i && t.wrap('<div class="snap-drawers" />')
            }
        }
    }), angular.module("snap").directive("snapDrawers", function() {
        "use strict";
        return {
            restrict: "AE",
            compile: function(e) {
                e.addClass("snap-drawers")
            }
        }
    }), angular.module("snap").directive("snapToggle", ["$rootScope", "snapRemote",
        function(e, t) {
            "use strict";
            return {
                restrict: "A",
                link: function(n, r, i) {
                    var s = i.snapId,
                        o = i.snapToggle || "left";
                    s && (s = n.$eval(s)), r.bind("click", function() {                                                 
                       t.toggle(o, s), e.$digest()
                    })
                }
            }
        }
    ]), angular.module("snap").provider("snapRemote", function() {
        "use strict";
        var e = this;
        return this.globalOptions = {}, this.$get = ["$q",
            function(t) {
                var n, r, i = {},
                    s = "__DEFAULT_SNAPPER_ID__",
                    o = {};
                return o.globalOptions = e.globalOptions, o.getSnapper = function(e) {

                    return e = e || s, i.hasOwnProperty(e) || n(e), i[e].deferred.promise
                }, o.register = function(e, t) {
                    t = t || s, i.hasOwnProperty(t) || n(t), i[t].isResolved && n(t), r(e, t)
                }, o.unregister = function(e) {
                    e = e || s, i.hasOwnProperty(e) && delete i[e]
                }, o.toggle = function(e, t) {
                    t = t || s, o.getSnapper(t).then(function(n) {
                        e === n.state().state ? o.close(t) : o.open(e, t)
                    })
                }, o.open = function(e, t) {
                    $("#header").animate({
                       left : '-266px'
                    },200);
                    
                    t = t || s, o.getSnapper(t).then(function(t) {
                        t.open(e)
                    })
                }, o.close = function(e) {
                    $("#header").animate({
                        left: "0"
                    }, 200);
                    e = e || s, o.getSnapper(e).then(function(e) {
                        e.close()
                    })
                },
               
                        n = function(e) {
                    i[e] = {
                        deferred: t.defer(),
                        isResolved: !1
                    }
                }, r = function(e, t) {
                    i[t].deferred.resolve(e), i[t].isResolved = !0
                }, o
            }
        ], this
    })